// Code generated by protoc-gen-go. DO NOT EDIT.
// source: summary.proto

package summary

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Job struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Worker               string   `protobuf:"bytes,4,opt,name=worker,proto3" json:"worker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7168d0e3f3f5589, []int{0}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Job) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Job) GetWorker() string {
	if m != nil {
		return m.Worker
	}
	return ""
}

type JobUpdate struct {
	App                  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	QueueId              string   `protobuf:"bytes,2,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Job                  *Job     `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobUpdate) Reset()         { *m = JobUpdate{} }
func (m *JobUpdate) String() string { return proto.CompactTextString(m) }
func (*JobUpdate) ProtoMessage()    {}
func (*JobUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7168d0e3f3f5589, []int{1}
}

func (m *JobUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobUpdate.Unmarshal(m, b)
}
func (m *JobUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobUpdate.Marshal(b, m, deterministic)
}
func (m *JobUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobUpdate.Merge(m, src)
}
func (m *JobUpdate) XXX_Size() int {
	return xxx_messageInfo_JobUpdate.Size(m)
}
func (m *JobUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_JobUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_JobUpdate proto.InternalMessageInfo

func (m *JobUpdate) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *JobUpdate) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

func (m *JobUpdate) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type JobBlueprint struct {
	JobName              string            `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	Fields               map[string]string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *JobBlueprint) Reset()         { *m = JobBlueprint{} }
func (m *JobBlueprint) String() string { return proto.CompactTextString(m) }
func (*JobBlueprint) ProtoMessage()    {}
func (*JobBlueprint) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7168d0e3f3f5589, []int{2}
}

func (m *JobBlueprint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobBlueprint.Unmarshal(m, b)
}
func (m *JobBlueprint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobBlueprint.Marshal(b, m, deterministic)
}
func (m *JobBlueprint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobBlueprint.Merge(m, src)
}
func (m *JobBlueprint) XXX_Size() int {
	return xxx_messageInfo_JobBlueprint.Size(m)
}
func (m *JobBlueprint) XXX_DiscardUnknown() {
	xxx_messageInfo_JobBlueprint.DiscardUnknown(m)
}

var xxx_messageInfo_JobBlueprint proto.InternalMessageInfo

func (m *JobBlueprint) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

func (m *JobBlueprint) GetFields() map[string]string {
	if m != nil {
		return m.Fields
	}
	return nil
}

type Stats struct {
	App                  string          `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	QueueId              string          `protobuf:"bytes,2,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Jobs                 map[string]*Job `protobuf:"bytes,3,rep,name=jobs,proto3" json:"jobs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ActiveJobs           uint32          `protobuf:"varint,4,opt,name=active_jobs,json=activeJobs,proto3" json:"active_jobs,omitempty"`
	QueuedJobs           uint32          `protobuf:"varint,5,opt,name=queued_jobs,json=queuedJobs,proto3" json:"queued_jobs,omitempty"`
	ProcessedJobs        uint32          `protobuf:"varint,6,opt,name=processed_jobs,json=processedJobs,proto3" json:"processed_jobs,omitempty"`
	DeferredJobs         uint32          `protobuf:"varint,7,opt,name=deferred_jobs,json=deferredJobs,proto3" json:"deferred_jobs,omitempty"`
	FailedJobs           uint32          `protobuf:"varint,8,opt,name=failed_jobs,json=failedJobs,proto3" json:"failed_jobs,omitempty"`
	RequeuedJobs         uint32          `protobuf:"varint,9,opt,name=requeued_jobs,json=requeuedJobs,proto3" json:"requeued_jobs,omitempty"`
	JobBlueprints        []*JobBlueprint `protobuf:"bytes,10,rep,name=job_blueprints,json=jobBlueprints,proto3" json:"job_blueprints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7168d0e3f3f5589, []int{3}
}

func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (m *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(m, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *Stats) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

func (m *Stats) GetJobs() map[string]*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *Stats) GetActiveJobs() uint32 {
	if m != nil {
		return m.ActiveJobs
	}
	return 0
}

func (m *Stats) GetQueuedJobs() uint32 {
	if m != nil {
		return m.QueuedJobs
	}
	return 0
}

func (m *Stats) GetProcessedJobs() uint32 {
	if m != nil {
		return m.ProcessedJobs
	}
	return 0
}

func (m *Stats) GetDeferredJobs() uint32 {
	if m != nil {
		return m.DeferredJobs
	}
	return 0
}

func (m *Stats) GetFailedJobs() uint32 {
	if m != nil {
		return m.FailedJobs
	}
	return 0
}

func (m *Stats) GetRequeuedJobs() uint32 {
	if m != nil {
		return m.RequeuedJobs
	}
	return 0
}

func (m *Stats) GetJobBlueprints() []*JobBlueprint {
	if m != nil {
		return m.JobBlueprints
	}
	return nil
}

func init() {
	proto.RegisterType((*Job)(nil), "Job")
	proto.RegisterType((*JobUpdate)(nil), "JobUpdate")
	proto.RegisterType((*JobBlueprint)(nil), "JobBlueprint")
	proto.RegisterMapType((map[string]string)(nil), "JobBlueprint.FieldsEntry")
	proto.RegisterType((*Stats)(nil), "Stats")
	proto.RegisterMapType((map[string]*Job)(nil), "Stats.JobsEntry")
}

func init() { proto.RegisterFile("summary.proto", fileDescriptor_f7168d0e3f3f5589) }

var fileDescriptor_f7168d0e3f3f5589 = []byte{
	// 450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcf, 0x6e, 0xd4, 0x30,
	0x10, 0xc6, 0xbb, 0xc9, 0x6e, 0xb6, 0x3b, 0xdb, 0xac, 0x2a, 0x0b, 0x55, 0x69, 0x2e, 0xad, 0x02,
	0x48, 0x3d, 0x45, 0x62, 0xe1, 0x00, 0x48, 0x5c, 0x90, 0x40, 0x22, 0x48, 0x08, 0xa5, 0x42, 0x1c,
	0x57, 0x76, 0xed, 0x45, 0xc9, 0xfe, 0x71, 0xb0, 0x9d, 0xa2, 0x3c, 0x09, 0x0f, 0xc0, 0x8b, 0x22,
	0x8f, 0xed, 0x12, 0x0e, 0x1c, 0x38, 0x6d, 0xe6, 0xf3, 0x6f, 0xbf, 0x19, 0xcf, 0x8c, 0x21, 0xd5,
	0xfd, 0xe1, 0x40, 0xd5, 0x50, 0x76, 0x4a, 0x1a, 0x59, 0x7c, 0x85, 0xb8, 0x92, 0x8c, 0xac, 0x20,
	0x6a, 0x78, 0x36, 0xb9, 0x9e, 0xdc, 0x2c, 0xea, 0xa8, 0xe1, 0xe4, 0x1c, 0x62, 0x43, 0xbf, 0x65,
	0x11, 0x0a, 0xf6, 0x93, 0x5c, 0x40, 0xa2, 0x0d, 0x35, 0xbd, 0xce, 0x62, 0x14, 0x7d, 0x64, 0xf5,
	0x1f, 0x52, 0xed, 0x84, 0xca, 0xa6, 0x4e, 0x77, 0x51, 0xf1, 0x19, 0x16, 0x95, 0x64, 0x5f, 0x3a,
	0x4e, 0x8d, 0xb0, 0x76, 0xb4, 0xeb, 0xbc, 0xbf, 0xfd, 0x24, 0x97, 0x70, 0xfa, 0xbd, 0x17, 0xbd,
	0xd8, 0x34, 0xdc, 0x67, 0x99, 0x63, 0xfc, 0x81, 0x93, 0x0b, 0x88, 0x5b, 0xc9, 0x30, 0xcd, 0x72,
	0x3d, 0x2d, 0x2b, 0xc9, 0x6a, 0x2b, 0x14, 0x3f, 0x27, 0x70, 0x56, 0x49, 0xf6, 0x76, 0xdf, 0x8b,
	0x4e, 0x35, 0x47, 0x63, 0x3d, 0x5a, 0xc9, 0x36, 0x47, 0x7a, 0x10, 0xde, 0x7a, 0xde, 0x4a, 0xf6,
	0x89, 0x1e, 0x04, 0x79, 0x06, 0xc9, 0xb6, 0x11, 0x7b, 0xae, 0xb3, 0xe8, 0x3a, 0xbe, 0x59, 0xae,
	0x2f, 0xcb, 0xf1, 0x3f, 0xcb, 0xf7, 0x78, 0xf6, 0xee, 0x68, 0xd4, 0x50, 0x7b, 0x30, 0x7f, 0x05,
	0xcb, 0x91, 0x6c, 0x4b, 0xde, 0x89, 0x21, 0x94, 0xbc, 0x13, 0x03, 0x79, 0x04, 0xb3, 0x7b, 0xba,
	0xef, 0x85, 0xaf, 0xd7, 0x05, 0xaf, 0xa3, 0x97, 0x93, 0xe2, 0x57, 0x0c, 0xb3, 0x5b, 0x43, 0x8d,
	0xfe, 0xbf, 0x8b, 0x3e, 0x81, 0x69, 0x2b, 0x99, 0x6d, 0xa8, 0x2d, 0xf1, 0xbc, 0x44, 0x0b, 0x5b,
	0xa8, 0xaf, 0x0c, 0x4f, 0xc9, 0x15, 0x2c, 0xe9, 0x9d, 0x69, 0xee, 0xc5, 0x06, 0x61, 0xdb, 0xe5,
	0xb4, 0x06, 0x27, 0x55, 0x1e, 0x40, 0x47, 0xee, 0x80, 0x99, 0x03, 0x9c, 0x84, 0xc0, 0x53, 0x58,
	0x75, 0x4a, 0xde, 0x09, 0xad, 0x03, 0x93, 0x20, 0x93, 0x3e, 0xa8, 0x88, 0x3d, 0x86, 0x94, 0x8b,
	0xad, 0x50, 0x2a, 0x50, 0x73, 0xa4, 0xce, 0x82, 0x18, 0x92, 0x6d, 0x69, 0xb3, 0x0f, 0xc8, 0xa9,
	0x4b, 0xe6, 0xa4, 0xe0, 0xa2, 0xc4, 0xb8, 0x9e, 0x85, 0x73, 0x09, 0x22, 0x42, 0x2f, 0x60, 0x65,
	0x27, 0xc7, 0xc2, 0x40, 0x74, 0x06, 0xd8, 0x83, 0xf4, 0xaf, 0x31, 0xd5, 0x69, 0x3b, 0x8a, 0x74,
	0xfe, 0x06, 0x57, 0xea, 0x9f, 0xf3, 0xc9, 0xc7, 0xf3, 0x09, 0x9b, 0xf3, 0x67, 0x4a, 0xeb, 0x8f,
	0x30, 0xbf, 0x75, 0xbb, 0x6f, 0x6f, 0xe1, 0x36, 0xd3, 0x4d, 0x2d, 0x71, 0xad, 0xcf, 0xfd, 0x6f,
	0x71, 0x42, 0xae, 0x60, 0xe1, 0x00, 0xfb, 0x38, 0xa0, 0x7c, 0xd8, 0xe4, 0x1c, 0x5d, 0x8b, 0x13,
	0x96, 0xe0, 0xf3, 0x79, 0xfe, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x8d, 0xba, 0x63, 0x4f, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SummaryClient is the client API for Summary service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SummaryClient interface {
	UpdateStats(ctx context.Context, in *Stats, opts ...grpc.CallOption) (*Stats, error)
	UpdateJob(ctx context.Context, in *JobUpdate, opts ...grpc.CallOption) (*Job, error)
}

type summaryClient struct {
	cc *grpc.ClientConn
}

func NewSummaryClient(cc *grpc.ClientConn) SummaryClient {
	return &summaryClient{cc}
}

func (c *summaryClient) UpdateStats(ctx context.Context, in *Stats, opts ...grpc.CallOption) (*Stats, error) {
	out := new(Stats)
	err := c.cc.Invoke(ctx, "/Summary/UpdateStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *summaryClient) UpdateJob(ctx context.Context, in *JobUpdate, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/Summary/UpdateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SummaryServer is the server API for Summary service.
type SummaryServer interface {
	UpdateStats(context.Context, *Stats) (*Stats, error)
	UpdateJob(context.Context, *JobUpdate) (*Job, error)
}

func RegisterSummaryServer(s *grpc.Server, srv SummaryServer) {
	s.RegisterService(&_Summary_serviceDesc, srv)
}

func _Summary_UpdateStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Stats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummaryServer).UpdateStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Summary/UpdateStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummaryServer).UpdateStats(ctx, req.(*Stats))
	}
	return interceptor(ctx, in, info, handler)
}

func _Summary_UpdateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummaryServer).UpdateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Summary/UpdateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummaryServer).UpdateJob(ctx, req.(*JobUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

var _Summary_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Summary",
	HandlerType: (*SummaryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateStats",
			Handler:    _Summary_UpdateStats_Handler,
		},
		{
			MethodName: "UpdateJob",
			Handler:    _Summary_UpdateJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "summary.proto",
}
