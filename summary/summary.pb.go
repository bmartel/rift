// Code generated by protoc-gen-go.
// source: summary.proto
// DO NOT EDIT!

/*
Package summary is a generated protocol buffer package.

It is generated from these files:
	summary.proto

It has these top-level messages:
	Stats
*/
package summary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Stats struct {
	QueueId       string   `protobuf:"bytes,1,opt,name=queue_id,json=queueId" json:"queue_id,omitempty"`
	Workers       []string `protobuf:"bytes,2,rep,name=workers" json:"workers,omitempty"`
	ActiveJobs    uint32   `protobuf:"varint,3,opt,name=active_jobs,json=activeJobs" json:"active_jobs,omitempty"`
	QueuedJobs    uint32   `protobuf:"varint,4,opt,name=queued_jobs,json=queuedJobs" json:"queued_jobs,omitempty"`
	ProcessedJobs uint32   `protobuf:"varint,5,opt,name=processed_jobs,json=processedJobs" json:"processed_jobs,omitempty"`
	DeferredJobs  uint32   `protobuf:"varint,6,opt,name=deferred_jobs,json=deferredJobs" json:"deferred_jobs,omitempty"`
	FailedJobs    uint32   `protobuf:"varint,7,opt,name=failed_jobs,json=failedJobs" json:"failed_jobs,omitempty"`
	RequeuedJobs  uint32   `protobuf:"varint,8,opt,name=requeued_jobs,json=requeuedJobs" json:"requeued_jobs,omitempty"`
}

func (m *Stats) Reset()                    { *m = Stats{} }
func (m *Stats) String() string            { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()               {}
func (*Stats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Stats) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

func (m *Stats) GetWorkers() []string {
	if m != nil {
		return m.Workers
	}
	return nil
}

func (m *Stats) GetActiveJobs() uint32 {
	if m != nil {
		return m.ActiveJobs
	}
	return 0
}

func (m *Stats) GetQueuedJobs() uint32 {
	if m != nil {
		return m.QueuedJobs
	}
	return 0
}

func (m *Stats) GetProcessedJobs() uint32 {
	if m != nil {
		return m.ProcessedJobs
	}
	return 0
}

func (m *Stats) GetDeferredJobs() uint32 {
	if m != nil {
		return m.DeferredJobs
	}
	return 0
}

func (m *Stats) GetFailedJobs() uint32 {
	if m != nil {
		return m.FailedJobs
	}
	return 0
}

func (m *Stats) GetRequeuedJobs() uint32 {
	if m != nil {
		return m.RequeuedJobs
	}
	return 0
}

func init() {
	proto.RegisterType((*Stats)(nil), "Stats")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Summary service

type SummaryClient interface {
	UpdateStats(ctx context.Context, in *Stats, opts ...grpc.CallOption) (*Stats, error)
}

type summaryClient struct {
	cc *grpc.ClientConn
}

func NewSummaryClient(cc *grpc.ClientConn) SummaryClient {
	return &summaryClient{cc}
}

func (c *summaryClient) UpdateStats(ctx context.Context, in *Stats, opts ...grpc.CallOption) (*Stats, error) {
	out := new(Stats)
	err := grpc.Invoke(ctx, "/Summary/UpdateStats", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Summary service

type SummaryServer interface {
	UpdateStats(context.Context, *Stats) (*Stats, error)
}

func RegisterSummaryServer(s *grpc.Server, srv SummaryServer) {
	s.RegisterService(&_Summary_serviceDesc, srv)
}

func _Summary_UpdateStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Stats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummaryServer).UpdateStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Summary/UpdateStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummaryServer).UpdateStats(ctx, req.(*Stats))
	}
	return interceptor(ctx, in, info, handler)
}

var _Summary_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Summary",
	HandlerType: (*SummaryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateStats",
			Handler:    _Summary_UpdateStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "summary.proto",
}

func init() { proto.RegisterFile("summary.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xed, 0xae, 0xdb, 0xac, 0xa3, 0xf1, 0xd0, 0x53, 0xf4, 0x62, 0x59, 0x11, 0x16, 0x0f,
	0x7b, 0xd0, 0xa7, 0xd0, 0xe3, 0x16, 0xcf, 0x25, 0x6d, 0xa6, 0x50, 0xb5, 0xa4, 0x4e, 0x52, 0xc5,
	0xb7, 0xf0, 0x91, 0xa5, 0x33, 0x8d, 0x78, 0x1a, 0xe6, 0xcb, 0xc7, 0x3f, 0xe1, 0x07, 0x1d, 0xa6,
	0x61, 0xb0, 0xf4, 0x7d, 0x18, 0xc9, 0x47, 0xbf, 0xfb, 0x59, 0xc1, 0xa6, 0x8a, 0x36, 0x86, 0xe2,
	0x0a, 0xb6, 0x1f, 0x13, 0x4e, 0x58, 0xf7, 0xce, 0x64, 0x65, 0xb6, 0x3f, 0x3b, 0x2a, 0xde, 0x9f,
	0x5c, 0x61, 0x40, 0x7d, 0x79, 0x7a, 0x43, 0x0a, 0x66, 0x55, 0xae, 0xe7, 0x97, 0x65, 0x2d, 0x6e,
	0xe0, 0xdc, 0xb6, 0xb1, 0xff, 0xc4, 0xfa, 0xd5, 0x37, 0xc1, 0xac, 0xcb, 0x6c, 0xaf, 0x8f, 0x20,
	0xe8, 0xd9, 0x37, 0x2c, 0x70, 0x8a, 0x13, 0xe1, 0x54, 0x04, 0x41, 0x2c, 0xdc, 0xc1, 0xe5, 0x48,
	0xbe, 0xc5, 0x10, 0x92, 0xb3, 0x61, 0x47, 0xff, 0x51, 0xd6, 0x6e, 0x41, 0x3b, 0xec, 0x90, 0x28,
	0x59, 0x39, 0x5b, 0x17, 0x09, 0xa6, 0x63, 0x9d, 0xed, 0xdf, 0x93, 0xa2, 0xe4, 0x98, 0xa0, 0x94,
	0x42, 0xf8, 0xff, 0x3f, 0x5b, 0x49, 0x49, 0x70, 0x96, 0x1e, 0xee, 0x41, 0x55, 0xd2, 0xd1, 0x1c,
	0xf8, 0x32, 0x3a, 0x1b, 0x51, 0x2a, 0xca, 0x0f, 0x3c, 0xaf, 0x97, 0xb9, 0x3b, 0x69, 0x72, 0x6e,
	0xf1, 0xf1, 0x37, 0x00, 0x00, 0xff, 0xff, 0x58, 0x88, 0x30, 0x16, 0x56, 0x01, 0x00, 0x00,
}
